{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mateo\\\\Desktop\\\\carrera\\\\b3\\\\2frontend3\\\\scripts\\\\adanMateoEntregable\\\\entregableFront\\\\adanMateoEntregableFront3\\\\src\\\\components\\\\Item.js\",\n    _s = $RefreshSig$();\n\n// El componente Item no tiene componentes hijos.\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo. *DONE*\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App. *DONE*\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso. *DONE*\n// Maqueta de Item:\n//    h3\n//    p\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\") *DONE*\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Item = _ref => {\n  _s();\n\n  let {\n    itemData,\n    method\n  } = _ref;\n  const [contador, setCount] = useState(itemData.stock === 0 ? \"agotado\" : itemData.stock);\n  const [isDisabled, setDisabled] = useState(contador === 0 || contador === \"agotado\" ? true : false);\n  const [buttonMessage, setButtonMessage] = useState(contador === 0 || contador === \"agotado\" ? \"SIN STOCK\" : \"COMPRAR\");\n\n  function substract() {\n    if (contador >= 1) setCount(contador - 1);\n    if (contador === 1) setOutStock();\n  }\n\n  function setOutStock() {\n    setDisabled(true);\n    setButtonMessage(\"SIN STOCK\");\n    setCount(\"agotado\");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"producto\",\n    id: itemData.id,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: itemData.producto.nombre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: itemData.producto.descripcion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"En stock: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: contador\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: isDisabled,\n      onClick: () => {\n        substract();\n        method();\n      },\n      children: buttonMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Item, \"wIGsJnResUK9yS+3+bJIm+ZfEH4=\");\n\n_c = Item;\nexport default Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["React","useState","Item","itemData","method","contador","setCount","stock","isDisabled","setDisabled","buttonMessage","setButtonMessage","substract","setOutStock","id","producto","nombre","descripcion"],"sources":["C:/Users/mateo/Desktop/carrera/b3/2frontend3/scripts/adanMateoEntregable/entregableFront/adanMateoEntregableFront3/src/components/Item.js"],"sourcesContent":["// El componente Item no tiene componentes hijos.\r\n// ESTADO: Item debe tener un número para almacenar la cantidad de stock, la misma se la defina el padre a la hora de crearlo. *DONE*\r\n\r\n// MÉTODOS: Item debe manejar el click de su boton para restar la cantidad en stock de sí mismo y a su vez poder aumentar el estado de su \"abuelo\" App. *DONE*\r\n\r\n// PROPS: Item recibe todos los campos que muestra en pantalla: nombre, descripcion, stock y el métodos heredados para su uso. *DONE*\r\n// Maqueta de Item:\r\n//    h3\r\n//    p\r\n//    h5 > span    (este span debe mostrar la cantidad si es mayor a 0 \"agotado\" si llega a 0)\r\n//    button       (este boton debe permitir comprar, pero si la cantidad es menor a 0 debe estar deshabilitado y decir \"Sin stock\") *DONE*\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst Item = ({ itemData, method })=>{\r\n  const [contador, setCount] = useState(itemData.stock === 0? \"agotado\": itemData.stock);\r\n  const [isDisabled, setDisabled] = useState(contador === 0 || contador === \"agotado\"? true: false);\r\n  const [buttonMessage, setButtonMessage] = useState(contador === 0 || contador === \"agotado\"? \"SIN STOCK\": \"COMPRAR\");\r\n  function substract() {\r\n\r\n    if (contador >= 1) setCount(contador -1);\r\n    if (contador === 1) setOutStock();\r\n    \r\n  }\r\n\r\n  function setOutStock(){\r\n      setDisabled(true);\r\n      setButtonMessage(\"SIN STOCK\");\r\n      setCount(\"agotado\")\r\n  }\r\n\r\n  return (\r\n    <div className='producto' id={itemData.id}>\r\n      <h3>{itemData.producto.nombre}</h3>\r\n      <p>{itemData.producto.descripcion}</p>\r\n      <h5>En stock: <span>{contador}</span></h5>\r\n      <button disabled={isDisabled} onClick={() => { substract(); method(); }}>{buttonMessage}</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Item;"],"mappings":";;;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,MAAMC,IAAI,GAAG,QAAwB;EAAA;;EAAA,IAAvB;IAAEC,QAAF;IAAYC;EAAZ,CAAuB;EACnC,MAAM,CAACC,QAAD,EAAWC,QAAX,IAAuBL,QAAQ,CAACE,QAAQ,CAACI,KAAT,KAAmB,CAAnB,GAAsB,SAAtB,GAAiCJ,QAAQ,CAACI,KAA3C,CAArC;EACA,MAAM,CAACC,UAAD,EAAaC,WAAb,IAA4BR,QAAQ,CAACI,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,SAA/B,GAA0C,IAA1C,GAAgD,KAAjD,CAA1C;EACA,MAAM,CAACK,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAACI,QAAQ,KAAK,CAAb,IAAkBA,QAAQ,KAAK,SAA/B,GAA0C,WAA1C,GAAuD,SAAxD,CAAlD;;EACA,SAASO,SAAT,GAAqB;IAEnB,IAAIP,QAAQ,IAAI,CAAhB,EAAmBC,QAAQ,CAACD,QAAQ,GAAE,CAAX,CAAR;IACnB,IAAIA,QAAQ,KAAK,CAAjB,EAAoBQ,WAAW;EAEhC;;EAED,SAASA,WAAT,GAAsB;IAClBJ,WAAW,CAAC,IAAD,CAAX;IACAE,gBAAgB,CAAC,WAAD,CAAhB;IACAL,QAAQ,CAAC,SAAD,CAAR;EACH;;EAED,oBACE;IAAK,SAAS,EAAC,UAAf;IAA0B,EAAE,EAAEH,QAAQ,CAACW,EAAvC;IAAA,wBACE;MAAA,UAAKX,QAAQ,CAACY,QAAT,CAAkBC;IAAvB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAIb,QAAQ,CAACY,QAAT,CAAkBE;IAAtB;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,sCAAc;QAAA,UAAOZ;MAAP;QAAA;QAAA;QAAA;MAAA,QAAd;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAQ,QAAQ,EAAEG,UAAlB;MAA8B,OAAO,EAAE,MAAM;QAAEI,SAAS;QAAIR,MAAM;MAAK,CAAvE;MAAA,UAA0EM;IAA1E;MAAA;MAAA;MAAA;IAAA,QAJF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAQD,CAzBD;;GAAMR,I;;KAAAA,I;AA2BN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}